name: create
run-name: ${{ inputs.aws_bucket_instance_name }}

on:
  workflow_dispatch:
    inputs:
      aws_bucket_instance_name:
        type: string
        required: true

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  create:
    runs-on: ubuntu-latest
    
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
      TF_VAR_github_workspace: ${{ github.workspace }}
      TF_LOG: INFO
      
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: checkout root repo
        uses: actions/checkout@v4
        
      # - name: Get env files
      #   run: |
      #     npx --yes dotenv-vault new 
      #     npx --yes dotenv-vault pull --dotenvMe  ci .env.ci
    
      # - name: Load .env file
      #   run: grep -o '^[^#]*' .env.ci >> "$GITHUB_ENV" 

      - run: |
          echo "xotocross_aws_key_id=$XOTOCROSS_AWS_KEY_ID" >> "$GITHUB_OUTPUT"
          echo "xotocross_github_ssh_key=$XOTOCROSS_GITHUB_SSH_KEY" >> "$GITHUB_OUTPUT"
          echo "xotocross_github_ssh_id=$XOTOCROSS_GITHUB_SSH_ID" >> "$GITHUB_OUTPUT"
          echo "xotocross_aws_access_key=$XOTOCROSS_AWS_ACCESS_KEY" >> "$GITHUB_OUTPUT"
        id: xotocross_key
        
      - name: Setup terraform cli
        uses: hashicorp/setup-terraform@v3

      - name: Setup aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ steps.xotocross_key.outputs.xotocross_aws_key_id }}
          aws-secret-access-key: ${{ steps.xotocross_key.outputs.xotocross_aws_access_key }}
          aws-region: eu-west-3

      - name: Repository checkout
        uses: actions/checkout@v4

      - name: Create bucket
        run: aws s3 ls "s3://${{ inputs.aws_bucket_instance_name }}" 2>&1 || aws s3api create-bucket --bucket ${{ inputs.aws_bucket_instance_name }} --region eu-west-3 --no-cli-pager  --create-bucket-configuration LocationConstraint=eu-west-3

      - name: Update vars
        run: |
          sed -i "s|xotocross_bucket_name|${{ inputs.aws_bucket_instance_name }}|g" vars.tf && sed -i "s|xotocross_bucket_name|${{ inputs.aws_bucket_instance_name }}|g" providers.tf && sed -i "s|xotocross_bucket_name|${{ inputs.aws_bucket_instance_name }}|g" lambda_function/scheduler/lambda_function.py


      # - name: Decode SSH Key and Create terraform.tfvars
      #   env:
      #     XOTOCROSS_GITHUB_SSH_ID: ${{ steps.xotocross_key.outputs.xotocross_github_ssh_id }}
      #   run: |
      #     KEY=$(echo $XOTOCROSS_GITHUB_SSH_ID | base64 -d)
      #     echo "ssh_public_key=\"$KEY\"" > terraform.tfvars
            
      - name: Install community.general collection and cloud.terraform
        run: |
          ansible-galaxy collection install community.general
          ansible-galaxy collection install cloud.terraform

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color

      - name: Apply terraform resources creation
        run: terraform apply --auto-approve

      - name: Upload .terraform.lock.hcl
        run: aws s3 cp .terraform.lock.hcl s3://${{ inputs.aws_bucket_instance_name }}

      # - name: Add SSH key
      #   env:
      #     SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #     XOTOCROSS_GITHUB_SSH_KEY: ${{ steps.xotocross_key.outputs.xotocross_github_ssh_key }}
      #   run: |
      #     mkdir -p /home/runner/.ssh
      #     KEY=$(echo "$XOTOCROSS_GITHUB_SSH_KEY" | base64 -d)
      #     echo "$KEY" > /home/runner/.ssh/id_rsa
      #     chmod 600 /home/runner/.ssh/id_rsa
      #     ssh-agent -a $SSH_AUTH_SOCK > /dev/null
      #     ssh-add /home/runner/.ssh/id_rsa
          
      - name: Playbook
        run: ansible-playbook -i inventory -v ansible/play.yml
